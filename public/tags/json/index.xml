<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Json on Danabases</title><link>localhost/tags/json/</link><description>Recent content in Json on Danabases</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener"&gt;CC BY-NC 4.0&lt;/a&gt;</copyright><lastBuildDate>Wed, 02 Jul 2025 14:59:44 -0700</lastBuildDate><atom:link href="localhost/tags/json/index.xml" rel="self" type="application/rss+xml"/><item><title>Improving Developer Productivity with VS Code Tasks</title><link>localhost/posts/2020-12-17-vscode-tasks/</link><pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate><guid>localhost/posts/2020-12-17-vscode-tasks/</guid><description>&lt;p&gt;Often in our developer workflows, we find ourselves running routine, or semi-routine, and monotonous tasks. This can be things like compiling code, bootstrapping dev servers, running migrations, etc. The kind of commands that you eventually get rather tired of typing into a terminal over, and over again. These days, many developers often rely on various kinds of &lt;em&gt;task runners&lt;/em&gt; to at least partially automate execution of these kinds of tedious and repetitive tasks.&lt;/p&gt;</description></item><item><title>Unlocking the Power of Apache Airflow</title><link>localhost/posts/2020-11-08-unlocking-airflow/</link><pubDate>Sun, 08 Nov 2020 00:00:00 +0000</pubDate><guid>localhost/posts/2020-11-08-unlocking-airflow/</guid><description>&lt;p&gt;After multiple previous failed attempts, I am finally starting to get the hang of Apache Airflow and, even with a relatively basic mastery, I have been able to do some pretty interesting things with it.&lt;/p&gt;
&lt;h2 id="what-is-airflow"&gt;What is Airflow?&lt;/h2&gt;
&lt;p&gt;Apache Airflow is a Python-based tool for scheduling and automating various workflows. It was originally created at AirBnB as an internal tool, and later open-sourced, under the Apache license. It has since become a top-level project at the Apache Foundation.&lt;/p&gt;</description></item><item><title>Integrating JSONB Data into Django Projects</title><link>localhost/posts/2020-2-13-jsonb-django/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><guid>localhost/posts/2020-2-13-jsonb-django/</guid><description>&lt;p&gt;This post follows up on my earlier post about &lt;a href="https://danabases.net/posts/2020-1-22-postgres-json/"&gt;storing json data in Postgres&lt;/a&gt;. In this article, I will be going over how to integrate the same &lt;code&gt;JSONB&lt;/code&gt; data I used in that post with a Django web application.&lt;/p&gt;
&lt;h2 id="modeling-the-data"&gt;Modeling the Data&lt;/h2&gt;
&lt;p&gt;Modeling &lt;code&gt;JSONB&lt;/code&gt; data with Django&amp;rsquo;s ORM tool is rather easy, as the framework has built in support for this in the &lt;code&gt;django.contrib&lt;/code&gt; module. Therefore, we would model our data like this in our &lt;code&gt;models.py&lt;/code&gt; file:&lt;/p&gt;</description></item><item><title>Storing and Querying JSON Data in PostgreSQL</title><link>localhost/posts/2020-1-22-postgres-json/</link><pubDate>Wed, 22 Jan 2020 00:00:00 +0000</pubDate><guid>localhost/posts/2020-1-22-postgres-json/</guid><description>&lt;p&gt;I recently started exploring how to store JSON data in a traditional relational
database management system (RDBMS), rather than a dedicated form of JSON/document
storage, like MongoDB. While I could write a lot more about the problems with
MongoDB, that&amp;rsquo;s not what I want to do here. Instead, I want to
focus primarily on how to store and query JSON in PostgreSQL. However, I
should note that PostgreSQL is not the only RDBMS that supports JSON storage.
I know that MariaDB also does, as of v10.2, and possibly other RDBMS as well. However,
since I have been mostly using and enjoying Postgres for awhile now,
I decided to focus on that, specifically.&lt;/p&gt;</description></item></channel></rss>